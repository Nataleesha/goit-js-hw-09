{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAGxC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OADAC,QAAQC,IAAIN,EAAUC,GACf,IAAIM,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLR,EACFM,EAAQ,C,SAAER,E,MAAUC,IAEpBQ,EAAO,C,SAAET,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZKN,SAASC,cAAc,iBAgB/Be,iBAAiB,SAASC,IAClCA,EAAMC,iBACN,MAAMC,EAAQC,SAASjB,EAASkB,OAC1BC,EAAaF,SAASrB,EAAQsB,OAC9BE,EAAYH,SAASlB,EAAOmB,OAClC,IAAIG,EAAQ,EAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAOM,IAExBD,EADQ,IAANC,EACMH,EAEAA,EAAaC,GAAaE,EAAI,GAGxCrB,EAAcqB,EAAGD,GACdE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA8B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA8B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst createBtn = document.querySelector('form > button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(position, delay);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreateBtn.addEventListener('click', event => {\n  event.preventDefault();\n  const count = parseInt(amountEl.value);\n  const delayValue = parseInt(delayEl.value);\n  const stepValue = parseInt(stepEl.value);\n  let delay = 0;\n\n  for (let i = 1; i <= count; i++) {\n    if (i === 1) {\n      delay = delayValue;\n    } else {\n      delay = delayValue + stepValue * (i - 1);\n    }\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","count","parseInt","value","delayValue","stepValue","delay1","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b9ea5cd2.js.map"}